---
import { urlForImage } from "../../sanity/urlForImage";
import type { Image, PortableTextBlock } from "sanity";
import PortableText from "../PortableText/PortableText.astro";
import type { Tag } from "../../utils/sanity";

interface Props {
number: number;
title: string;
tags: Tag[];
tools: string[];
videoSrc: URL;
heroImage: Image;
excerpt: PortableTextBlock;
link: string;
}

const {
number,
title,
tags,
tools,
videoSrc,
heroImage,
excerpt,
link
} = Astro.props;
---

<a href={link}>
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 pb-8 lg:gap-20">
        {/* Video/Image Block */}
        <div class="col-span-2 lg:order-last">
            {videoSrc ?
            <video src={videoSrc.toString()} class="aspect-video rounded-lg bg-gray-800 w-full" autoplay muted loop
                data-aos="fade-in" />
            :
            <img src={urlForImage(heroImage).url()} class="aspect-video object-contain rounded-lg bg-gray-800 w-full"
                data-aos="fade-in">}
        </div>

        {/* Text Block */}
        <div class="col-span-1 space-y-8 lg:order-first">
            <div class="col-span-1 space-y-4" data-aos="fade-in">
                <h2>Prototype #{number}</h2>
                <h1 class="text-3xl">{title}</h1>
            </div>
            <div class="col-span-2 space-y-4" data-aos="fade-in">
                <PortableText portableText={excerpt} />
            </div>
            <div>
                {[...tags, ...tools].map((item, index) => (
                <div>
                    <h2 class="text-xs font-light px-2 rounded-full ring-1 ring-bg-light inline-block my-1" data-aos="fade-in">
                        # {typeof item === 'string' ? `tool-${item.toLocaleLowerCase()}` :
                        item.title.toLocaleLowerCase().replace(/\s/g, "-")}
                    </h2>
                </div>
                ))}
            </div>

            <h1 class="text-lg text-accent underline" data-aos="fade-in">View prototype</h1>
        </div>
</a>
