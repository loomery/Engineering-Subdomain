---
import type { PortableTextBlock } from '@portabletext/types';
import TitleDetail from '../../layouts/TitleDetail.astro';
import { urlForImage } from '../../sanity/urlForImage';
import type { Actions } from '../../utils/sanity';
import PortableText from '../PortableText/PortableText.astro';

interface Props {
  actions: Actions;
}

const { actions } = Astro.props;

function countParagraphs(content: PortableTextBlock[]): number {
  return content.filter(block => 
    block._type === 'block' && 
    'style' in block && 
    block.style === 'normal'
  ).length;
}
---

<TitleDetail title='Methodology' sectionClass={`col-span-3 space-y-16 ${actions.actions.length > 3 ? 'md:grid md:grid-cols-2 md:gap-12 md:space-y-0' : ''}`}>
  {actions.actions.map((action) => (
    <div class="flex flex-col space-y-8">
      {/* Image Block */}
      <div data-aos="fade-in">
        <img 
          src={urlForImage(action.image).url()}
          class="w-full max-h-[60vh] aspect-square object-cover bg-gray-800 rounded-lg mb-8 md:mb-0"
        />
      </div>

      {/* Text Block */}
      <div data-aos="fade-in" class="space-y-4">
        <h2 class="text-xl">{action.heading}</h2>
        
        <div class={// @ts-ignore
            `space-y-4 ${actions.actions.length > 3 ? '' : countParagraphs(action.content) > 1 ? 'portable-text-columns' : 'lg:grid lg:grid-cols-2'}`}>
          <PortableText portableText={action.content} class:list={'text-lg'} />
        </div>
      </div>
    </div>
  ))}
</TitleDetail>

<style>
  @media (min-width: 768px) {
    .portable-text-columns {
      column-count: 2;
      column-gap: 2rem;
    }
  }
</style>