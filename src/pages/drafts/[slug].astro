---
import { sanityClient } from "sanity:client";
import { urlForImage } from "../../sanity/urlForImage";
import { type Image } from "@sanity/types";
import type { PrototypeSchema } from "../../utils/sanity";

import LargeCTACard from "../../components/LargeCTACard.astro";
import ActionsSection from "../../components/Prototype/ActionsSection.astro";
import Goals from "../../components/Prototype/Goals.astro";
import Summary from "../../components/Prototype/Summary.astro";
import IconDetailStack from "../../components/Prototype/IconDetailStack.astro";
import ImageAndDetail from "../../components/ImageDetail.astro";
import ContributorNotes from "../../components/Prototype/ContributorNotes.astro";
import VideoView from "../../components/VideoView.astro";
import Prototype from "../../layouts/Prototype.astro";
import { toPlainText } from "astro-portabletext/utils";
import Break from "../../components/Break.astro";
import Slideshow from "../../components/Slideshow.astro";

export const prerender = false;

Astro.response.headers.set('Cache-Control', 'public, max-age=0');

const { slug } = Astro.params;

const groq = `*[_type == "prototype" && slug.current == $slug] {
    ..., 
    summary {
      ...,
      contributors[]->,
    },
    contributorNotes {
      ...,
      contributors[]->,
    },
    tags[]->
}[0]`;

export const getStaticPaths = (() => {
    return {
        params: { slug: prototype.slug.current }
    };
});

const prototype: PrototypeSchema = await sanityClient.fetch(groq, { slug: slug });
const heroImageUrls = prototype.heroImageAssets.map((asset: Image) => urlForImage(asset).url())
---

<Prototype name={prototype.prototypeName} slug={slug} excerpt={toPlainText(prototype.excerpt)}
keywords={prototype.keywords} heroSrcArray={heroImageUrls}>

<section class="space-y-8 mt-24">
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
    <div class="lg:col-span-2 space-y-6">
      <h1 class="text-5xl font-light leading-normal">{prototype.title}</h1>
      <h1 class="text-2xl font-light">{prototype.subtitle}</h1>

      <div class="space-x-2 font-light">
        {prototype.tags.map((tag) => (
        <span class="text-xs px-2 rounded-full ring-1 ring-bg-light inline-block my-1">
          {"# " + tag.title.toLocaleLowerCase().replace(/\s/g, "-")}
        </span>
        ))}
      </div>
    </div>
  </div>

  <Slideshow imageUrls={heroImageUrls} />
</section>

<Break />

  <Summary technologies={prototype.summary.technologies} 
  tools={prototype.summary.tools} features={prototype.summary.keyFeatures} contributors={prototype.summary.contributors} />

  <Break />

  <Goals title={prototype.goals.heading} goals={prototype.goals.goals} />

  <Break />

  <ActionsSection actions={prototype.actions} />

  <Break />

  {prototype.techStack ?
    // @ts-ignore
    <IconDetailStack tools={
        prototype.techStack.tools.map((tool) => ({
        icon: tool.icon,
        name: tool.name,
        detail: tool.detail,
      }))
    } includeArrow={true} />
    <Break />: null}

  {prototype.videoUrl ? <VideoView src={prototype.videoUrl.toString()} /> <Break /> : null}

  <ImageAndDetail title={prototype.useCases.title} 
    useCases={prototype.useCases.useCases} />

    <Break />

  {prototype.contributorNotes ? <ContributorNotes contributorNotes={prototype.contributorNotes} /> <Break /> : null}

  {prototype.tryItOut ? 
  <LargeCTACard tryItOutObject={prototype.tryItOut} /> : null
  }
</Prototype>
